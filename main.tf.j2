provider "google" {
  project     = "{{ tfvars.project_id }}"
  region      = "{{ tfvars.region }}"
  credentials = file("{{ tfvars.credentials }}")
}

# GKE cluster
resource "google_container_cluster" "{{ tfvars.app }}" {
  name     = "{{ tfvars.app }}-gke"
  location = "{{ tfvars.region }}"

  remove_default_node_pool = true
  initial_node_count       = {{ tfvars.initial_node_count }}

  network    = "{{ tfvars.project }}-vpc"
  subnetwork = "{{ tfvars.project }}-subnet"

  master_auth {
    username = ""
    password = ""

    client_certificate_config {
      issue_client_certificate = false
    }
  }
}

# Separately Managed Node Pool
resource "google_container_node_pool" "{{ tfvars.app }}" {
  depends_on = [
    google_container_cluster.{{ tfvars.app }},
  ]

  name        = "{{ tfvars.app }}-gke-node-pool"
  location    = "{{ tfvars.region }}"
  cluster     = "{{ tfvars.app }}-gke"
  node_count  = {{ tfvars.node_count }}

  autoscaling {
    max_node_count = {{ tfvars.autoscaling.max_node_count }}
    min_node_count = {{ tfvars.autoscaling.min_node_count }}
  }

  node_config {
    oauth_scopes = [
      "https://www.googleapis.com/auth/logging.write",
      "https://www.googleapis.com/auth/monitoring",
    ]

    labels = {
      env = "{{ tfvars.app }}"
    }

    # preemptible  = true
    machine_type = "{{ tfvars.machine_type }}"
    tags         = ["gke-node", "{{ tfvars.app }}-gke"]
    metadata = {
      disable-legacy-endpoints = "true"
    }
  }
}

output "id" {
  description = "cluster_id"
  value       = google_container_cluster.{{ tfvars.app }}.id

  depends_on = [
    google_container_cluster.{{ tfvars.app }},
    google_container_node_pool.{{ tfvars.app }},
  ]
}

output "endpoint" {
  description = "cluster_endpoint"
  value       = google_container_cluster.{{ tfvars.app }}.endpoint

  depends_on = [
    google_container_cluster.{{ tfvars.app }},
    google_container_node_pool.{{ tfvars.app }},
  ]
}
